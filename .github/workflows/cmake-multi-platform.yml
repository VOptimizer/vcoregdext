# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build of vcoregdext

on:
  push:
    # branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            godot_static_lib: Release/godot-cpp.windows.release.64.lib
            vcore_lib: vcoregdext.dll
            sub_dir: /Release
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            godot_static_lib: libgodot-cpp.linux.release.64.a
            vcore_lib: libvcoregdext.so
            sub_dir: ""
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            godot_static_lib: libgodot-cpp.macos.release.64.a
            vcore_lib: libvcoregdext.dylib
        exclude:
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: "recursive"

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        build_output_dir="${{ github.workspace }}/build"
        # Replace backslashes with forward slashes
        build_output_dir="${build_output_dir//\\//}"
        echo "build-output-dir=${build_output_dir}" >> "$GITHUB_OUTPUT"

    # Reduces build times
    - name: Restore gdextension
      id: cache-gdextension-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ steps.strings.outputs.build-output-dir }}/third-party/godot-cpp
        key: ${{ runner.os }}-gdextension

    - if: ${{ steps.cache-gdextension-restore.outputs.cache-hit != 'true' }}
      name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
        -S ${{ github.workspace }}
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON

    - if: ${{ steps.cache-gdextension-restore.outputs.cache-hit == 'true' }}
      name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
        -DPREBUILT_GODOT_PATH=${{ steps.strings.outputs.build-output-dir }}/third-party/godot-cpp/bin/${{ matrix.godot_static_lib }}
        -S ${{ github.workspace }}
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -j 4

    - name: Save gdextension
      id: cache-gdextension-save
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.strings.outputs.build-output-dir }}/third-party/godot-cpp
        key: ${{ runner.os }}-gdextension

    - name: Debug
      run: |
        ls ${{ steps.strings.outputs.build-output-dir }}/
        ls ${{ steps.strings.outputs.build-output-dir }}/${{ matrix.sub_dir }}

    - name: Copy
      if: startsWith(matrix.os, 'windows')
      run: mv ${{ steps.strings.outputs.build-output-dir }}${{ matrix.sub_dir }}/${{ matrix.vcore_lib }} ${{ steps.strings.outputs.build-output-dir }}

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: true
        files: ${{ steps.strings.outputs.build-output-dir }}/${{ matrix.vcore_lib }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
